#!/bin/bash

echo "üöÄ –£–º–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ HTTPS –¥–ª—è Freedom Hub"
echo "========================================="

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
domain="hub.freedom1.ru"
email="krokxa228@gmail.com"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–±–æ—Ä–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–∏—Å—Ç–µ–º–µ
gather_system_info() {
    echo ""
    echo "üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –°–ò–°–¢–ï–ú–´"
    echo "======================="
    
    echo ""
    echo "üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ:"
    echo "   –û–°: $(cat /etc/os-release | grep PRETTY_NAME | cut -d'"' -f2 2>/dev/null || echo "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")"
    echo "   –Ø–¥—Ä–æ: $(uname -r)"
    echo "   –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: $(uname -m)"
    echo "   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: $(whoami)"
    echo "   UID: $EUID"
    echo "   –†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $(pwd)"
    
    echo ""
    echo "üåê –°–µ—Ç–µ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:"
    echo "   –í–Ω–µ—à–Ω–∏–π IP: $(curl -s ifconfig.me 2>/dev/null || echo "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å")"
    echo "   –õ–æ–∫–∞–ª—å–Ω—ã–π IP: $(hostname -I | awk '{print $1}' 2>/dev/null || echo "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")"
    echo "   –ò–º—è —Ö–æ—Å—Ç–∞: $(hostname)"
    
    echo ""
    echo "üîå –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤:"
    echo "   –ü–æ—Ä—Ç 80: $(netstat -tlnp | grep ":80\s" >/dev/null && echo "‚úÖ –û—Ç–∫—Ä—ã—Ç" || echo "‚ùå –ó–∞–∫—Ä—ã—Ç")"
    echo "   –ü–æ—Ä—Ç 443: $(netstat -tlnp | grep ":443\s" >/dev/null && echo "‚úÖ –û—Ç–∫—Ä—ã—Ç" || echo "‚ùå –ó–∞–∫—Ä—ã—Ç")"
    
    echo ""
    echo "üê≥ Docker –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:"
    if command -v docker &> /dev/null; then
        echo "   Docker: ‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        echo "   Docker Compose: $(docker compose version 2>/dev/null | head -1 | cut -d' ' -f4 || echo "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")"
        echo "   Docker —Å—Ç–∞—Ç—É—Å: $(systemctl is-active docker 2>/dev/null || echo "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")"
    else
        echo "   Docker: ‚ùå –ù–ï —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi
    
    echo ""
    echo "üî• Firewall –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:"
    if command -v ufw &> /dev/null; then
        ufw_status=$(ufw status | grep "Status" 2>/dev/null || echo "Status: inactive")
        echo "   UFW: ‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω - $ufw_status"
    else
        echo "   UFW: ‚ùå –ù–ï —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi
    
    if command -v iptables &> /dev/null; then
        echo "   iptables: ‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        echo "   –ü—Ä–∞–≤–∏–ª–∞ iptables: $(iptables -L INPUT | grep -c "ACCEPT" 2>/dev/null || echo "0")"
    else
        echo "   iptables: ‚ùå –ù–ï —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi
    
    echo ""
    echo "üåç DNS –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:"
    echo "   DNS —Å–µ—Ä–≤–µ—Ä: $(cat /etc/resolv.conf | grep nameserver | head -1 | awk '{print $2}' 2>/dev/null || echo "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")"
    echo "   –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–º–µ–Ω–∞ $domain:"
    nslookup "$domain" 2>/dev/null | grep -E "(Name|Address)" || echo "   ‚ùå DNS –∑–∞–ø—Ä–æ—Å –Ω–µ —É–¥–∞–ª—Å—è"
    
    echo ""
    echo "üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞:"
    echo "   docker-compose.https.yml: $(test -f docker-compose.https.yml && echo "‚úÖ –°—É—â–µ—Å—Ç–≤—É–µ—Ç" || echo "‚ùå –ù–ï —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")"
    echo "   nginx/conf.d/default.conf: $(test -f nginx/conf.d/default.conf && echo "‚úÖ –°—É—â–µ—Å—Ç–≤—É–µ—Ç" || echo "‚ùå –ù–ï —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")"
    echo "   certbot –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $(test -d certbot && echo "‚úÖ –°—É—â–µ—Å—Ç–≤—É–µ—Ç" || echo "‚ùå –ù–ï —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")"
    
    echo ""
    echo "üíæ –î–∏—Å–∫–æ–≤–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ:"
    df -h . | tail -1 | awk '{print "   –î–æ—Å—Ç—É–ø–Ω–æ: " $4 " –∏–∑ " $2 " (" $5 " –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ)"}'
    
    echo ""
    echo "üß† –ü–∞–º—è—Ç—å:"
    free -h | grep Mem | awk '{print "   –í—Å–µ–≥–æ: " $2 ", –î–æ—Å—Ç—É–ø–Ω–æ: " $7}'
    
    echo ""
    echo "üìã –ü—Ä–æ—Ü–µ—Å—Å—ã –Ω–∞ –ø–æ—Ä—Ç–∞—Ö 80/443:"
    netstat -tlnp | grep -E ":(80|443)\s" | while read line; do
        echo "   $line"
    done
    
    echo ""
    echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –∏–∑–≤–Ω–µ:"
    echo "   HTTP –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å: $(curl -s -o /dev/null -w "%{http_code}" "http://$domain" 2>/dev/null || echo "–û—à–∏–±–∫–∞")"
    echo "   HTTPS –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å: $(curl -s -o /dev/null -w "%{http_code}" "https://$domain" 2>/dev/null || echo "–û—à–∏–±–∫–∞")"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ—Ä—Ç–æ–≤
check_ports() {
    echo ""
    echo "üîç –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤ 80 –∏ 443"
    echo "-----------------------------------"
    
    port_80_open=false
    port_443_open=false
    
    if netstat -tlnp | grep -q ":80\s"; then
        echo "‚úÖ –ü–æ—Ä—Ç 80 –æ—Ç–∫—Ä—ã—Ç"
        port_80_open=true
    else
        echo "‚ùå –ü–æ—Ä—Ç 80 –ù–ï –æ—Ç–∫—Ä—ã—Ç"
    fi
    
    if netstat -tlnp | grep -q ":443\s"; then
        echo "‚úÖ –ü–æ—Ä—Ç 443 –æ—Ç–∫—Ä—ã—Ç"
        port_443_open=true
    else
        echo "‚ùå –ü–æ—Ä—Ç 443 –ù–ï –æ—Ç–∫—Ä—ã—Ç"
    fi
    
    if [ "$port_80_open" = true ] && [ "$port_443_open" = true ]; then
        echo "üéâ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–æ—Ä—Ç—ã –æ—Ç–∫—Ä—ã—Ç—ã!"
        return 0
    else
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –ø–æ—Ä—Ç–æ–≤
open_ports() {
    echo ""
    echo "üîì –®–∞–≥ 2: –û—Ç–∫—Ä—ã—Ç–∏–µ –ø–æ—Ä—Ç–æ–≤ 80 –∏ 443"
    echo "-----------------------------------"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—â–µ–Ω –ª–∏ —Å–∫—Ä–∏–ø—Ç –æ—Ç root
    if [ "$EUID" -ne 0 ]; then
        echo "‚ùå –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω –æ—Ç root (sudo)"
        echo "–ó–∞–ø—É—Å—Ç–∏—Ç–µ: sudo ./setup-https-complete.sh"
        exit 1
    fi
    
    echo "üîç –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º firewall..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º UFW
    if command -v ufw &> /dev/null; then
        echo "üåê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ UFW (Ubuntu firewall)..."
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å UFW
        ufw_status=$(ufw status | grep "Status" 2>/dev/null || echo "Status: inactive")
        echo "UFW —Å—Ç–∞—Ç—É—Å: $ufw_status"
        
        # –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø–æ—Ä—Ç—ã
        echo "üîì –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø–æ—Ä—Ç 80..."
        ufw allow 80/tcp
        
        echo "üîì –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø–æ—Ä—Ç 443..."
        ufw allow 443/tcp
        
        echo "‚úÖ UFW –ø–æ—Ä—Ç—ã –æ—Ç–∫—Ä—ã—Ç—ã"
        
    else
        echo "‚ö†Ô∏è  UFW –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º iptables..."
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º iptables
    if command -v iptables &> /dev/null; then
        echo "üî• –ù–∞—Å—Ç—Ä–æ–π–∫–∞ iptables..."
        
        # –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø–æ—Ä—Ç 80
        echo "üîì –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø–æ—Ä—Ç 80 –≤ iptables..."
        iptables -A INPUT -p tcp --dport 80 -j ACCEPT 2>/dev/null || echo "–ü—Ä–∞–≤–∏–ª–æ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
        
        # –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø–æ—Ä—Ç 443
        echo "üîì –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø–æ—Ä—Ç 443 –≤ iptables..."
        iptables -A INPUT -p tcp --dport 443 -j ACCEPT 2>/dev/null || echo "–ü—Ä–∞–≤–∏–ª–æ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
        
        echo "‚úÖ iptables –ø–æ—Ä—Ç—ã –æ—Ç–∫—Ä—ã—Ç—ã"
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–∞–≤–∏–ª–∞ (–¥–ª—è Ubuntu/Debian)
        if command -v iptables-save &> /dev/null; then
            echo "üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–∞–≤–∏–ª–∞ iptables..."
            mkdir -p /etc/iptables 2>/dev/null
            iptables-save > /etc/iptables/rules.v4 2>/dev/null || echo "‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–∞–≤–∏–ª–∞"
        fi
    fi
    
    echo "‚è≥ –ñ–¥–µ–º –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª..."
    sleep 5
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Docker –∏ Nginx
setup_docker() {
    echo ""
    echo "üê≥ –®–∞–≥ 3: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Docker –∏ Nginx"
    echo "----------------------------------"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Docker
    if ! command -v docker &> /dev/null; then
        echo "‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
        echo "üìã –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker:"
        echo "   curl -fsSL https://get.docker.com -o get-docker.sh && sudo sh get-docker.sh"
        exit 1
    fi
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
    echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
    docker compose -f docker-compose.https.yml down
    
    # –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    echo "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
    mkdir -p certbot/conf
    mkdir -p certbot/www
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º nginx
    echo "üåê –ó–∞–ø—É—Å–∫ Nginx..."
    docker compose -f docker-compose.https.yml up -d nginx
    
    # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ nginx
    echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ Nginx (15 —Å–µ–∫—É–Ω–¥)..."
    sleep 15
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –¥–æ–º–µ–Ω–∞
test_domain() {
    echo ""
    echo "üîç –®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –¥–æ–º–µ–Ω–∞"
    echo "-------------------------------------"
    
    echo "–ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å $domain..."
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    echo "test-content-$(date +%s)" > certbot/www/test
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å
    if curl -s "http://$domain/.well-known/acme-challenge/test" | grep -q "test-content"; then
        echo "‚úÖ –î–æ–º–µ–Ω –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ HTTP"
        return 0
    else
        echo "‚ùå –î–æ–º–µ–Ω –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ HTTP"
        echo "–ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ Nginx..."
        docker compose -f docker-compose.https.yml logs nginx --tail=10
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
get_ssl_certificate() {
    echo ""
    echo "üìú –®–∞–≥ 5: –ü–æ–ª—É—á–µ–Ω–∏–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞"
    echo "-----------------------------------"
    
    echo "–ü–æ–ª—É—á–∞–µ–º SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –¥–ª—è $domain..."
    
    docker compose -f docker-compose.https.yml run --rm certbot certonly \
        --webroot \
        --webroot-path=/var/www/certbot \
        --email "$email" \
        --agree-tos \
        --no-eff-email \
        --force-renewal \
        -d "$domain"
    
    if [ $? -eq 0 ]; then
        echo "‚úÖ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω!"
        return 0
    else
        echo "‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
final_setup() {
    echo ""
    echo "üéØ –®–∞–≥ 6: –§–∏–Ω–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞"
    echo "-------------------------------"
    
    # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ nginx –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
    echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Nginx —Å HTTPS..."
    docker compose -f docker-compose.https.yml exec nginx nginx -s reload
    
    # –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    echo "üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
    docker compose -f docker-compose.https.yml up -d
    
    echo ""
    echo "üéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
    echo "üåê –í–∞—à —Å–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: https://$domain"
    echo ""
    echo "üìã –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
    echo "   –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤: docker compose -f docker-compose.https.yml logs -f"
    echo "   –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞: ./renew-ssl.sh"
    echo "   –û—Å—Ç–∞–Ω–æ–≤–∫–∞: docker compose -f docker-compose.https.yml down"
    echo "   –°—Ç–∞—Ç—É—Å: docker compose -f docker-compose.https.yml ps"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö
show_troubleshooting() {
    echo ""
    echo "üîß –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –£–°–¢–†–ê–ù–ï–ù–ò–Æ –ü–†–û–ë–õ–ï–ú"
    echo "======================================"
    
    echo ""
    echo "üìù –ï—Å–ª–∏ –ø–æ—Ä—Ç—ã –Ω–µ –æ—Ç–∫—Ä—ã–≤–∞—é—Ç—Å—è:"
    echo "   1. Cloud –ø—Ä–æ–≤–∞–π–¥–µ—Ä: –ø—Ä–æ–≤–µ—Ä—å—Ç–µ Security Groups/Firewall Rules"
    echo "   2. AWS: –¥–æ–±–∞–≤—å—Ç–µ –ø—Ä–∞–≤–∏–ª–∞ –≤ Security Group (–ø–æ—Ä—Ç—ã 80, 443)"
    echo "   3. Google Cloud: —Å–æ–∑–¥–∞–π—Ç–µ Firewall Rule –¥–ª—è –ø–æ—Ä—Ç–æ–≤ 80, 443"
    echo "   4. VPS: —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞"
    echo "   5. –î–æ–º–∞—à–Ω–∏–π —Å–µ—Ä–≤–µ—Ä: –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ Port Forwarding –Ω–∞ —Ä–æ—É—Ç–µ—Ä–µ"
    
    echo ""
    echo "üåê –ï—Å–ª–∏ –¥–æ–º–µ–Ω –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω:"
    echo "   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ DNS –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ–º–µ–Ω–∞"
    echo "   2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ A-–∑–∞–ø–∏—Å—å —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ IP –≤–∞—à–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞"
    echo "   3. –ü–æ–¥–æ–∂–¥–∏—Ç–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è DNS (–º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –¥–æ 24 —á–∞—Å–æ–≤)"
    
    echo ""
    echo "üê≥ –ï—Å–ª–∏ Docker –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç:"
    echo "   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å: systemctl status docker"
    echo "   2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: sudo systemctl start docker"
    echo "   3. –î–æ–±–∞–≤—å—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥—Ä—É–ø–ø—É docker: sudo usermod -aG docker $USER"
    
    echo ""
    echo "üìû –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:"
    echo "   - –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤: netstat -tlnp | grep -E ':(80|443)'"
    echo "   - –õ–æ–≥–∏ Nginx: docker compose -f docker-compose.https.yml logs nginx"
    echo "   - –õ–æ–≥–∏ Certbot: docker compose -f docker-compose.https.yml logs certbot"
    echo "   - –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤: docker compose -f docker-compose.https.yml ps"
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
main() {
    echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º —É–º–Ω—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É HTTPS..."
    
    # –°–æ–±–∏—Ä–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∏—Å—Ç–µ–º–µ
    gather_system_info
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Ä—Ç—ã
    if check_ports; then
        echo "‚úÖ –ü–æ—Ä—Ç—ã —É–∂–µ –æ—Ç–∫—Ä—ã—Ç—ã, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —à–∞–≥ 2"
    else
        # –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø–æ—Ä—Ç—ã
        open_ports
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–Ω–æ–≤–∞
        if ! check_ports; then
            echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –ø–æ—Ä—Ç—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—Ä—É—á–Ω—É—é."
            show_troubleshooting
            exit 1
        fi
    fi
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Docker
    setup_docker
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ–º–µ–Ω
    if ! test_domain; then
        echo "‚ùå –î–æ–º–µ–Ω –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ DNS –Ω–∞—Å—Ç—Ä–æ–π–∫–∏."
        show_troubleshooting
        exit 1
    fi
    
    # –ü–æ–ª—É—á–∞–µ–º SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç
    if ! get_ssl_certificate; then
        echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç."
        echo "üìã –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: docker compose -f docker-compose.https.yml logs certbot"
        show_troubleshooting
        exit 1
    fi
    
    # –§–∏–Ω–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞
    final_setup
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@"
