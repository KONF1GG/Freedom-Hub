import { useState } from "react";
import CopyField from "../ui/CopyField";
import TaskPhotos from "./TaskPhotos";
import TaskHistory from "./TaskHistory";
import TaskCoordsEditor from "./TaskCoordsEditor";

interface TaskDetailsProps {
  task: any;
}

export default function TaskDetails({ task }: TaskDetailsProps) {
  const [activeTab, setActiveTab] = useState("details");

  const tabs = [
    { id: "details", label: "–î–µ—Ç–∞–ª–∏", icon: "üìã" },
    { id: "photos", label: "–§–æ—Ç–æ", icon: "üì∏" },
    { id: "comments", label: "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏", icon: "üí¨" },
    { id: "coords", label: "–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã", icon: "üìç" },
    { id: "history", label: "–ò—Å—Ç–æ—Ä–∏—è", icon: "üìú" },
  ];

  return (
    <div className="task-details">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="task-header-card">
        <div className="task-header-content">
          <div className="task-title-section">
            <h2 className="task-title">{task.title || "–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è"}</h2>
            {task.description && (
              <p className="task-description">{task.description}</p>
            )}
          </div>
          <div className="task-status-indicators">
            <div
              className={`task-status ${task.status ? "completed" : "pending"}`}
            >
              {task.status ? "–í—ã–ø–æ–ª–Ω–µ–Ω–∞" : "–ù–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞"}
            </div>
            <div
              className={`task-priority ${task.priority ? "high" : "normal"}`}
            >
              {task.priority ? "–í—ã—Å–æ–∫–∏–π" : "–û–±—ã—á–Ω—ã–π"}
            </div>
          </div>
        </div>

        <div className="task-info-grid">
          <CopyField
            label="–ù–æ–º–µ—Ä –∑–∞—è–≤–∫–∏"
            value={task.contract_number || task.id}
          />
          <CopyField label="–ö–ª–∏–µ–Ω—Ç" value={task.client || "-"} />
          <CopyField label="–¢–∏–ø –æ–±—ä–µ–∫—Ç–∞" value={task.objectType || "-"} />
          <CopyField label="–¢–∏–ø —É—Å–ª—É–≥–∏" value={task.serviceType || "-"} />
          {task.address && (
            <CopyField
              label="–ê–¥—Ä–µ—Å"
              value={task.address}
              className="task-address-field"
            />
          )}
        </div>
      </div>

      {/* –¢–∞–±—ã */}
      <div className="task-tabs">
        <div className="task-tabs-header">
          <nav className="task-tabs-navigation">
            {tabs.map((tab) => (
              <button
                key={tab.id}
                onClick={() => setActiveTab(tab.id)}
                className={`task-tab-button ${
                  activeTab === tab.id ? "active" : ""
                }`}
              >
                <span className="task-tab-icon">{tab.icon}</span>
                {tab.label}
              </button>
            ))}
          </nav>
        </div>

        <div className="task-tabs-content">
          {activeTab === "details" && (
            <div className="task-details-content">
              <div className="task-dates-grid">
                <div className="task-date-field">
                  <label className="task-date-label">–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞</label>
                  <div className="task-date-value">
                    {task.begin_date
                      ? new Date(task.begin_date).toLocaleDateString("ru-RU")
                      : "-"}
                  </div>
                </div>
                <div className="task-date-field">
                  <label className="task-date-label">–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è</label>
                  <div className="task-date-value">
                    {task.due_date
                      ? new Date(task.due_date).toLocaleDateString("ru-RU")
                      : "-"}
                  </div>
                </div>
              </div>
            </div>
          )}

          {activeTab === "photos" && (
            <TaskPhotos
              photos={task.photos || []}
              onPhotoUpload={async (file) => {
                // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ
                console.log("–ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–æ—Ç–æ:", file);
              }}
            />
          )}

          {activeTab === "comments" && (
            <div className="task-comments-placeholder">
              –§—É–Ω–∫—Ü–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ
            </div>
          )}

          {activeTab === "coords" && (
            <TaskCoordsEditor
              lat={task.coordinates?.lat}
              lng={task.coordinates?.lng}
              onSave={async (lat, lng) => {
                // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
                console.log("–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç:", { lat, lng });
              }}
            />
          )}

          {activeTab === "history" && (
            <TaskHistory history={task.history || []} />
          )}
        </div>
      </div>
    </div>
  );
}
